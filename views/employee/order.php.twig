{% extends "/templates/base.php.twig" %}

{% block title %}Panel de pedidos{% endblock %}

{% block content %}

{% include "/components/header.php.twig" %}

<div class="max-w-3xl mx-auto mt-8 w-full">
    <form action="/employee" method="get" class="mb-4">
        <button type="submit" class="flex items-center gap-2 px-4 py-2 rounded-full font-semibold text-blue-700 bg-blue-100 hover:bg-blue-200 transition-all duration-200 shadow-sm">
            <i data-feather="arrow-left" class="h-5 w-5"></i>
            Volver
        </button>
    </form>
    <h1 class="text-2xl font-bold text-gray-800 mb-6">Pedido para la mesa {{order.table_id}}</h1>
    <div class="bg-white border border-blue-200 rounded-xl shadow p-4 mb-6">
        <h2 class="text-lg font-semibold text-blue-700 mb-2">Detalles del pedido</h2>
        <p class="text-gray-600">Fecha: {{ order.date|date('d/m/Y') }}</p>
        <p class="text-gray-600">Hora: {{ order.time|date('H:i') }}</p>
        <p id="order-status" class="text-gray-600">Estado: {{ order.getStatus() == 'completed' ? 'Completado' : (order.getStatus() == 'pending' ? 'Pendiente' : 'Vacío') }}</p>
    </div>
    <div class="bg-white border border-blue-100 rounded-xl shadow p-4 mb-6">
        <h2 class="text-lg font-semibold text-blue-700 mb-4">Productos</h2>
        <div class="flex flex-wrap gap-6 w-full items-stretch justify-center" id="products-row">
            {% for item in products %}
                <div class="flex flex-col items-center h-full" style="min-width:240px; max-width:240px;">
                    <div class="product-card group bg-white rounded-2xl shadow-md p-4 flex flex-col items-center border border-gray-100 hover:shadow-xl hover:border-blue-400 transition-all duration-200 flex-shrink-0 cursor-pointer relative {% if item.done %}bg-blue-100{% endif %} h-full"
                        style="width:240px; min-width:240px; max-width:240px; height:260px; min-height:260px; max-height:260px;"
                        data-product-id="{{ item.product_id }}"
                        data-done="{{ item.done ? 'true' : 'false' }}">
                        <span class="relative w-40 h-40 flex items-center justify-center overflow-hidden rounded-xl mb-2">
                            {% if item.product_snapshot.image %}
                                <img src="/{{ item.product_snapshot.image }}" alt="{{ item.product_snapshot.name }}" class="transition-transform duration-300 group-hover:scale-110 rounded-xl bg-white" style="width:10rem; height:10rem; min-width:10rem; min-height:10rem; max-width:10rem; max-height:10rem; object-fit:contain;">
                            {% else %}
                                <span class="text-gray-400 flex flex-col items-center"><i data-feather="image" class="w-8 h-8 mb-1"></i>Sin imagen</span>
                            {% endif %}
                        </span>
                        <div class="mt-1 text-center w-full">
                            <div class="font-semibold text-gray-800 flex items-center gap-1 justify-center text-lg group-hover:text-primary transition-colors">
                                <i data-feather="box" class="w-5 h-5 text-blue-400"></i>
                                {{ item.product_snapshot.name }}
                            </div>
                            <div class="flex items-center justify-center gap-2 mt-1">
                                <span class="text-gray-500 flex items-center gap-1"><i data-feather="hash" class="w-4 h-4"></i>x{{ item.quantity }}</span>
                            </div>
                            <div class="flex items-center justify-center gap-2 mt-1">
                                <span class="text-blue-700 font-bold flex items-center gap-1"><i data-feather="euro" class="w-4 h-4"></i>{{ (item.price * item.quantity)|number_format(2, '.', ',') }} €</span>
                            </div>
                        </div>
                        <input type="checkbox"
                            class="form-checkbox h-5 w-5 text-green-600 absolute top-3 right-3 z-10 opacity-0 cursor-pointer"
                            id="product-done-{{ item.product_id }}"
                            data-product-id="{{ item.product_id }}"
                            {% if item.done %}checked{% endif %}
                            onchange="changeProductStatus('{{ order.id }}', '{{ item.product_id }}', this.checked)"
                        >
                        <span class="absolute top-3 right-3 z-0 w-7 h-7 rounded-full transition-all duration-200 pointer-events-none done-indicator {% if item.done %}bg-blue-500{% else %}bg-gray-200{% endif %}"></span>
                    </div>
                    <div class="flex flex-col gap-1 w-full items-center">
                        {% if item.metadata and item.metadata.notes %}
                            <div class="mt-2 text-xs text-gray-600 bg-yellow-50 rounded p-2 flex items-center gap-1 justify-center w-full"><i data-feather="edit-3" class="w-4 h-4 text-yellow-500"></i> {{ item.metadata.notes }}</div>
                        {% endif %}
                        {% if item.metadata and item.metadata.components and item.metadata.components|length > 1 %}
                            <div class="mt-2 text-xs text-gray-600 bg-blue-50 rounded p-2 flex flex-col items-center w-full">
                                <div class="font-semibold text-blue-700 flex items-center gap-1 mb-1"><i data-feather="layers" class="w-4 h-4"></i>Componentes:</div>
                                <ul class="list-disc list-inside text-xs text-left">
                                    {% for comp in item.metadata.components %}
                                        <li>{% if comp is iterable and comp is not same as(false) and comp is not same as(true) and comp is not null and (comp is not defined or comp is not same as('')) %}{{ comp|join(', ') }}{% else %}{{ comp }}{% endif %}</li>
                                    {% endfor %}
                                </ul>
                            </div>
                        {% endif %}
                    </div>
                </div>
            {% else %}
                <div class="text-gray-500 py-4">No hay productos en este pedido.</div>
            {% endfor %}
        </div>
    </div>
</div>

<script>
function updateOrderStatusUI(products) {
    const statusEl = document.getElementById('order-status');
    if (!statusEl) return;
    const total = products.length;
    const done = products.filter(p => p.getAttribute('data-done') === 'true').length;
    let status = '';
    if (total === 0) {
        status = 'Vacío';
    } else if (done === total) {
        status = 'Completado';
    } else if (done === 0) {
        status = 'No iniciado';
    } else {
        status = 'Pendiente';
    }
    statusEl.textContent = 'Estado: ' + status;
}

function changeProductStatus(orderId, productId, checked) {
    fetch(`/employee/${orderId}/change-product-status`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
        body: `product_id=${productId}&status=${checked ? 'true' : 'false'}`
    })
    .then(res => res.json())
    .then(function(data) {
        if (!data.success) {
            alert('Error al actualizar el estado: ' + (data.error || 'Error desconocido'));
        } else {
            // Actualiza el estado visual de la card
            const card = document.querySelector(`.product-card[data-product-id='${productId}']`);
            const indicator = card ? card.querySelector('.done-indicator') : null;
            if (card) {
                card.setAttribute('data-done', checked ? 'true' : 'false');
                if (checked) {
                    card.classList.add('opacity-60');
                    card.classList.add('bg-blue-100');
                    if (indicator) indicator.classList.remove('bg-gray-200'), indicator.classList.add('bg-blue-500');
                } else {
                    card.classList.remove('opacity-60');
                    card.classList.remove('bg-blue-100');
                    if (indicator) indicator.classList.remove('bg-blue-500'), indicator.classList.add('bg-gray-200');
                }
            }
            // Actualiza el estado del pedido
            const allCards = Array.from(document.querySelectorAll('.product-card'));
            updateOrderStatusUI(allCards);
        }
    })
    .catch(() => alert('Error de red al actualizar el estado.'));
}

document.addEventListener('DOMContentLoaded', function() {
    // Estado visual inicial de las cards
    document.querySelectorAll('.product-card').forEach(function(card) {
        if (card.getAttribute('data-done') === 'true') {
            card.classList.add('opacity-60');
            card.classList.add('bg-blue-100');
            const indicator = card.querySelector('.done-indicator');
            if (indicator) { indicator.classList.remove('bg-gray-200'); indicator.classList.add('bg-blue-500'); }
        } else {
            card.classList.remove('opacity-60');
            card.classList.remove('bg-blue-100');
            const indicator = card.querySelector('.done-indicator');
            if (indicator) { indicator.classList.remove('bg-blue-500'); indicator.classList.add('bg-gray-200'); }
        }
        // Permite cambiar el estado haciendo click en la card (además del checkbox)
        card.addEventListener('click', function(e) {
            if (e.target.tagName.toLowerCase() === 'input') return;
            const checkbox = card.querySelector('input[type="checkbox"]');
            if (checkbox) {
                checkbox.checked = !checkbox.checked;
                changeProductStatus('{{ order.id }}', card.getAttribute('data-product-id'), checkbox.checked);
            }
        });
    });
    // Estado inicial del pedido
    updateOrderStatusUI(Array.from(document.querySelectorAll('.product-card')));
});
</script>

{% endblock %}