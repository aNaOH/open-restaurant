{% extends "/templates/admin.php.twig" %}

{% block title %}Editar producto promocional{% endblock %}

{% block name %}Editar producto promocional{% endblock %}
{% block content %}
    <div class="max-w-lg mx-auto bg-white rounded-2xl p-8">
        <form action="/admin/promotional/edit/{{ composed.id }}" method="POST" enctype="multipart/form-data" class="flex flex-col gap-4">
            <div>
                <label for="name" class="block text-gray-700 text-sm font-bold mb-2">Nombre</label>
                <input type="text" id="name" name="name" required value="{{ composed.name }}" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
            </div>
            <div>
                <label for="category" class="block text-gray-700 text-sm font-bold mb-2">Categoría</label>
                <select id="category" name="category" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                    <option value="none">Sin categoría</option>
                    {% for category in categories %}
                        <option value="{{ category.id }}" {% if composed.category and composed.category.id == category.id %}selected{% endif %}>{{ category.name }}</option>
                    {% endfor %}
                </select>
            </div>
            <div>
                <label for="description" class="block text-gray-700 text-sm font-bold mb-2">Descripción</label>
                <textarea id="description" name="description" required class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">{{ composed.description }}</textarea>
            </div>
            <div>
                <label for="image" class="block text-gray-700 text-sm font-bold mb-2">Imagen</label>
                <file-upload id="imgUpload" name="image" class="w-full" accept-image="true" accept-video="false" image-aspect-ratio="1:1" min-image-width="512" min-image-height="512" max-image-width="2048" max-image-height="2048" existing-image="{{ composed.getImagePath() }}"></file-upload>
            </div>
            <div>
                <label for="price" class="block text-gray-700 text-sm font-bold mb-2">Precio</label>
                <input type="number" id="price" name="price" required step="0.01" min="0" value="{{ composed.price }}" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
            </div>
            <div>
                <label class="block text-gray-700 text-sm font-bold mb-2">Componentes</label>
                <div id="componentsContainer" class="flex flex-col gap-2">
                    <div class="component-row flex gap-2 items-center">
                        <select class="component-type-select border rounded px-2 py-1" style="min-width:110px">
                            <option value="product">Producto</option>
                            <option value="category">Categoría</option>
                        </select>
                        <select class="component-category-filter border rounded px-2 py-1" style="min-width:110px">
                            <option value="">Todas</option>
                            {% for category in categories %}
                                <option value="{{ category.id }}">{{ category.name }}</option>
                            {% endfor %}
                        </select>
                        <select class="component-product-select border rounded px-2 py-1" multiple style="min-width:160px">
                            {% if composed is defined and composed.id is defined %}
                                {% for product in products %}
                                    {% if product.id != composed.id %}
                                        <option value="{{ product.id }}" data-category="{{ product.category.id }}">{{ product.name }}</option>
                                    {% endif %}
                                {% endfor %}
                            {% else %}
                                {% for product in products %}
                                    <option value="{{ product.id }}" data-category="{{ product.category.id }}">{{ product.name }}</option>
                                {% endfor %}
                            {% endif %}
                        </select>
                        <select class="component-category-select border rounded px-2 py-1" style="min-width:160px; display:none">
                            <option value="">Selecciona categoría</option>
                            {% for category in categories %}
                                <option value="{{ category.id }}">{{ category.name }}</option>
                            {% endfor %}
                        </select>
                        <button type="button" class="remove-component-btn text-red-600 hover:text-red-800 text-xl font-bold px-2" title="Quitar componente" style="display:none">&times;</button>
                    </div>
                </div>
                <button type="button" id="addComponentBtn" class="mt-2 btn secondary flex items-center gap-1"><i data-feather="plus"></i> Añadir componente</button>
            </div>
            <button type="submit" class="btn primary flex items-center gap-2"><i data-feather="save"></i> Guardar cambios</button>
        </form>
    </div>
{% endblock %}
{% block scripts %}
<script src="/assets/js/components/fileUpload.js"></script>
<script>
document.addEventListener('DOMContentLoaded', function() {
    const componentsContainer = document.getElementById('componentsContainer');
    const addComponentBtn = document.getElementById('addComponentBtn');
    function updateRemoveComponentButtons() {
        const rows = componentsContainer.querySelectorAll('.component-row');
        rows.forEach((row, idx) => {
            const btn = row.querySelector('.remove-component-btn');
            btn.style.display = (rows.length > 1) ? '' : 'none';
        });
    }
    addComponentBtn.addEventListener('click', function() {
        const firstRow = componentsContainer.querySelector('.component-row');
        const newRow = firstRow.cloneNode(true);
        newRow.querySelector('.component-type-select').value = 'product';
        newRow.querySelector('.component-product-select').style.display = '';
        Array.from(newRow.querySelector('.component-product-select').options).forEach(opt => opt.selected = false);
        newRow.querySelector('.component-category-select').style.display = 'none';
        newRow.querySelector('.component-category-select').selectedIndex = 0;
        newRow.querySelector('.component-category-filter').style.display = '';
        newRow.querySelector('.component-category-filter').selectedIndex = 0;
        newRow.querySelector('.remove-component-btn').style.display = '';
        componentsContainer.appendChild(newRow);
        updateRemoveComponentButtons();
    });
    componentsContainer.addEventListener('click', function(e) {
        if (e.target.classList.contains('remove-component-btn')) {
            const rows = componentsContainer.querySelectorAll('.component-row');
            if (rows.length > 1) {
                e.target.closest('.component-row').remove();
                updateRemoveComponentButtons();
            }
        }
    });
    componentsContainer.addEventListener('change', function(e) {
        if (e.target.classList.contains('component-type-select')) {
            const row = e.target.closest('.component-row');
            if (e.target.value === 'product') {
                row.querySelector('.component-product-select').style.display = '';
                row.querySelector('.component-category-select').style.display = 'none';
                row.querySelector('.component-category-filter').style.display = '';
            } else {
                row.querySelector('.component-product-select').style.display = 'none';
                row.querySelector('.component-category-select').style.display = '';
                row.querySelector('.component-category-filter').style.display = 'none';
            }
        }
        if (e.target.classList.contains('component-category-filter')) {
            const row = e.target.closest('.component-row');
            const filterValue = e.target.value;
            const productSelect = row.querySelector('.component-product-select');
            Array.from(productSelect.options).forEach(opt => {
                if (!filterValue || opt.dataset.category === filterValue) {
                    opt.style.display = '';
                } else {
                    opt.style.display = 'none';
                    opt.selected = false;
                }
            });
        }
    });
    updateRemoveComponentButtons();
});
</script>
{% endblock %}